# Faiz Essa
# GDELT Data Cleaning
# 03/20/2023

rm(list=ls())

# importing packages
library(tidyverse)
library(haven)
library(lubridate)
library(countrycode)

# data import 
raw_data <- readRDS("Data/GDELT/RawGDELT_IndiaStates.rds")
raw_data2 <- readRDS("Data/GDELT/RawGDELT_IndiaStates_2.rds")
WhatsAppInterest <- read_csv("Data/WhatsApp/WhatsAppInterest.csv")

######################## EVENT ROOT CODE DATA ############################

# renaming variables and fixing dates
gdelt_data <- raw_data %>%
  rename(GAULADM1Code = ActionGeo_ADM1Code,
         count = f0_) %>%
  mutate(date = as.Date(as.character(SQLDATE), "%Y%m%d")) %>%
  select(!SQLDATE)

# CONSTRUCTING PANEL

# creates list of dates from 2013-2023
date_list <- seq.POSIXt(ISOdate(2015,1,1),ISOdate(2023,1,1), by="day")

# list of event codes 
event_codes <- raw_data %>%
  distinct(EventRootCode)

# creates list of unique adm2 codes
GAULADM1Code <- gdelt_data %>%
  distinct(GAULADM1Code)

# creating `blank` panel
dates <- data.frame(date=date_list) %>%
  mutate(date = as.Date(date)) %>%
  crossing(GAULADM1Code) %>%
  crossing(event_codes) %>%
  arrange(GAULADM1Code, EventRootCode, date)

# merging to add event counts
gdelt_panel <- gdelt_data %>%
  right_join(dates, by = c("date", "EventRootCode", "GAULADM1Code")) %>%
  mutate(count = ifelse(is.na(count), 0, count)) %>%
  relocate(date, .before = "count") %>%
  arrange(GAULADM1Code, EventRootCode, date) %>%
  pivot_wider(names_from = EventRootCode, values_from = count) %>%
  rename(protest_count = "14", assault_count = "18", fight_count = "19", massviolence_count = "20")

######################## EVENT CODE DATA #############################

gdelt_data_2 <- raw_data2 %>%
  rename(GAULADM1Code = ActionGeo_ADM1Code,
         count = f0_) %>%
  mutate(date = as.Date(as.character(SQLDATE), "%Y%m%d")) %>%
  # I rename eventrootcode to eventcode to use the same dates panel
  select(!SQLDATE)

# list of event codes 
event_codes_2 <- raw_data2 %>%
  distinct(EventCode)

# creating `blank` panel
dates_2 <- data.frame(date=date_list) %>%
  mutate(date = as.Date(date)) %>%
  crossing(GAULADM1Code) %>%
  crossing(event_codes_2) %>%
  arrange(GAULADM1Code, EventCode, date)

# merging to add event counts
gdelt_panel_2 <- gdelt_data_2 %>%
  right_join(dates_2, by = c("date", "EventCode", "GAULADM1Code")) %>%
  mutate(count = ifelse(is.na(count), 0, count)) %>%
  relocate(date, .before = "count") %>%
  arrange(GAULADM1Code, EventCode, date) %>%
  pivot_wider(names_from = EventCode, values_from = count) %>%
  # taking sums (we want vars to just be demonstrations and violent protests)
  mutate(demonstration_count = 
           rowSums(across(c("141", "1411", "1412", "1413", "1414")))) %>%
  rename(violentprotest_count = "145") %>%
  # only keep relevant vars
  select(GAULADM1Code, date, demonstration_count, violentprotest_count)

# merging event code data and event root code data 
gdelt_panel <- gdelt_panel %>%
  left_join(gdelt_panel_2, by = c("GAULADM1Code", "date"))

################# AGGREGATING PANEL TO WEEKLY LEVEL ###################

# aggregate panel to week level
gdelt_panel_weekly <- gdelt_panel %>%
  mutate(week = week(date), year = year(date)) %>%
  group_by(GAULADM1Code, year, week) %>%
  summarize(protest_count = sum(protest_count),
            assault_count = sum(assault_count),
            fight_count = sum(fight_count),
            massviolence_count = sum(massviolence_count),
            demonstration_count = sum(demonstration_count),
            violentprotest_count = sum(violentprotest_count)) %>%
  ungroup() %>%
  group_by(year, week) %>%
  mutate(time = cur_group_id()) %>%
  ungroup() %>% 
  mutate(protest_indicator = ifelse(protest_count > 0, 1, 0),
         assault_indicator = ifelse(assault_count > 0, 1, 0),
         fight_indicator = ifelse(fight_count > 0, 1, 0),
         massviolence_indicator = ifelse(massviolence_count > 0, 1, 0),
         demonstration_indicator = ifelse(demonstration_count > 0, 1, 0),
         violentprotest_indicator = ifelse(violentprotest_count > 0, 1, 0),
         log_protests = log(protest_count + 1),
         log_assaults = log(assault_count + 1),
         log_fights = log(fight_count + 1),
         log_massviolence = log(massviolence_count + 1),
         log_demonstrations = log(demonstration_count + 1),
         log_violentprotests = log(violentprotest_count + 1)) %>%
  relocate(time, .before = "protest_count")

# merging in whatsapp data
gtrends_es_panel <- WhatsAppInterest %>%
  select(GAULADM1Code, WhatsAppInterest) %>%
  right_join(gdelt_panel_weekly, by = "GAULADM1Code", multiple = "all") %>%
  filter(!is.na(WhatsAppInterest))

# saving data 
write_csv(gtrends_es_panel, "Data/GDELT/gtrends_es_panel.csv")

################# AGGREGATING PANEL TO MONTHLY LEVEL ###################

gdelt_panel_monthly <- gdelt_panel %>%
  mutate(month = month(date), year = year(date)) %>%
  group_by(GAULADM1Code, year, month) %>%
  summarize(protest_count = sum(protest_count),
            assault_count = sum(assault_count),
            fight_count = sum(fight_count),
            massviolence_count = sum(massviolence_count),
            demonstration_count = sum(demonstration_count),
            violentprotest_count = sum(violentprotest_count)) %>%
  ungroup() %>%
  group_by(year, month) %>%
  mutate(time = cur_group_id()) %>%
  ungroup() %>% 
  mutate(protest_indicator = ifelse(protest_count > 0, 1, 0),
         assault_indicator = ifelse(assault_count > 0, 1, 0),
         fight_indicator = ifelse(fight_count > 0, 1, 0),
         massviolence_indicator = ifelse(massviolence_count > 0, 1, 0),
         demonstration_indicator = ifelse(demonstration_count > 0, 1, 0),
         violentprotest_indicator = ifelse(violentprotest_count > 0, 1, 0),
         log_protests = log(protest_count + 1),
         log_assaults = log(assault_count + 1),
         log_fights = log(fight_count + 1),
         log_massviolence = log(massviolence_count + 1),
         log_demonstrations = log(demonstration_count + 1),
         log_violentprotests = log(violentprotest_count + 1)) %>%
  relocate(time, .before = "protest_count")

# merging in whatsapp data
gtrends_es_panel_monthly <- WhatsAppInterest %>%
  select(GAULADM1Code, WhatsAppInterest) %>%
  right_join(gdelt_panel_monthly, by = "GAULADM1Code", multiple = "all") %>%
  filter(!is.na(WhatsAppInterest))

# saving data 
write_csv(gtrends_es_panel_monthly, "Data/GDELT/gtrends_es_panel_monthly.csv")

############### AGGREGATING PANEL TO QUARTERLY LEVEL ###################

gdelt_panel_quarterly <- gdelt_panel %>%
  mutate(quarter = quarter(date), year = year(date)) %>%
  group_by(GAULADM1Code, year, quarter) %>%
  summarize(protest_count = sum(protest_count),
            assault_count = sum(assault_count),
            fight_count = sum(fight_count),
            massviolence_count = sum(massviolence_count),
            demonstration_count = sum(demonstration_count),
            violentprotest_count = sum(violentprotest_count)) %>%
  ungroup() %>%
  group_by(year, quarter) %>%
  mutate(time = cur_group_id()) %>%
  ungroup() %>% 
  mutate(protest_indicator = ifelse(protest_count > 0, 1, 0),
         assault_indicator = ifelse(assault_count > 0, 1, 0),
         fight_indicator = ifelse(fight_count > 0, 1, 0),
         massviolence_indicator = ifelse(massviolence_count > 0, 1, 0),
         demonstration_indicator = ifelse(demonstration_count > 0, 1, 0),
         violentprotest_indicator = ifelse(violentprotest_count > 0, 1, 0),
         log_protests = log(protest_count + 1),
         log_assaults = log(assault_count + 1),
         log_fights = log(fight_count + 1),
         log_massviolence = log(massviolence_count + 1),
         log_demonstrations = log(demonstration_count + 1),
         log_violentprotests = log(violentprotest_count + 1)) %>%
  relocate(time, .before = "protest_count")

gtrends_es_panel_quarterly <- WhatsAppInterest %>%
  select(GAULADM1Code, WhatsAppInterest) %>%
  right_join(gdelt_panel_quarterly, by = "GAULADM1Code", multiple = "all") %>%
  filter(!is.na(WhatsAppInterest))

# saving data 
write_csv(gtrends_es_panel_quarterly, "Data/GDELT/gtrends_es_panel_quarterly.csv")

# clearing
rm(list=ls())
